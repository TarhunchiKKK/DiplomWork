syntax = "proto3";

import "common.proto";

package documents;

/********************************************Documents*********************************************************************/

service DocumentsService {
    rpc Create (ICreateDocumentDto) returns (ICreateDocumentResponse) {}

    rpc Update (IUpdateDocumentDto) returns (common.IEmptyResponse) {}

    rpc FindAll (IFindDocumentsDto) returns (IFindDocumentsResponse) {}

    rpc FindOneById(IFindDocumentByIdDto) returns (IFindDocumentByIdResponse) {}  
}

message ICreateDocumentDto {
    string authorId = 1;

    string title = 2;

    string typeId = 3;

    string aimId = 4; 

    bool isUrgent = 5;

    string fileExtension = 6;
}

message ICreateDocumentResponseData {
    string id = 1;

    string title = 2;

    string authorId = 3;

    string typeId = 4;

    string aimId = 5; 

    string status = 6;

    bool isUrgent = 7;
}

message ICreateDocumentResponse {
    oneof response {
        ICreateDocumentResponseData data = 1;

        common.IHttpError error = 2;
    }
}

message IUpdateDocumentDto {
    string documentId = 1;

    optional string title = 2;

    optional string typeId = 3;

    optional string aimId = 4; 

    optional bool isUrgent = 5;

    string userId = 6;
}

message IFindDocumentsDto {
    optional string authorId = 1;
    
    optional string typeId = 2;

    optional string aimId = 3;

    optional string status = 4;

    optional bool isUrgent = 5;

    optional string sortOrder = 6;
}

message IDocumentShortData {
    string id = 1;

    string title = 2;

    string createdAt = 3;
}

message IFindDocumentResponseData {
    repeated IDocumentShortData documents = 1;
}

message IFindDocumentsResponse {
    oneof response {
        IFindDocumentResponseData data = 1;

        common.IHttpError error = 2;
    }
}

message IFindDocumentByIdDto {
    string documentId = 1;

    string userid = 2;
}

message IFindOneDocumentResponse {
    string id = 1;

    string title = 2;

    string typeId = 3;

    string aimId = 4;

    bool isUrgent = 5;

    string status = 6;

    string authorId = 7;
}

message IFindDocumentByIdResponse {
    oneof response {
        IFindOneDocumentResponse data = 1;

        common.IHttpError error = 2;
    }
}

/********************************************Favourite Documents*********************************************************************/

service FavouriteDocumentsService {
    rpc Add (IAddToFavouriteDto) returns (common.IEmptyResponse) {}

    rpc Remove (IRemoveFromFavouriteDto) returns (common.IEmptyResponse) {}

    rpc FindAll (IFindFavouriteDocumentsDto) returns (IFindDocumentsResponse) {}
}

message IAddToFavouriteDto {
    string userId = 1;

    string documentId = 2;
}


message IRemoveFromFavouriteDto {
    string documentId = 1;

    string userId = 2;
}

message IFindFavouriteDocumentsDto {
    string userId = 1;
}

/********************************************Document Versions*********************************************************************/

service DocumentVersionsService {
    rpc Create (ICreateDocumentVersionDto) returns (ICreateDocumentVersionResponse) {}

    rpc FindAll (IFindAllVersionsDto) returns (IFindAllVersionsResponse) {}
}

message ICreateDocumentVersionDto {
    string documentId = 1;

    string fileExtension = 2;

    optional string description = 3;

    string userId = 4; 
}

message ICreateDocumentVersionResponseData {
    string url = 1;
}

message ICreateDocumentVersionResponse {
    oneof response {
        ICreateDocumentVersionResponseData data = 1;
        
        common.IHttpError error = 2;
    }
}

message IFindAllVersionsDto {
    string documentId = 1;

    string userId = 2;
}

message IVersion {
    string id = 1;

    optional string description = 2;

    string url = 3;

    string createdAt = 4;
}

message IFindAllVersionsResponseData {
    repeated IVersion versions = 1;
}

message IFindAllVersionsResponse {
    oneof response {
        IFindAllVersionsResponseData data = 1;

        common.IHttpError error = 2;
    }
}