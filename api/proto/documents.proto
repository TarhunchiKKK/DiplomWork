syntax = "proto3";

import "common.proto";

package documents;

/********************************************Documents*********************************************************************/

service DocumentsService {
    rpc Create (ICreateDocumentDto) returns (ICreateDocumentResponse) {}

    rpc Update (IUpdateDocumentDto) returns (common.IEmptyResponse) {}

    rpc FindAll (IFindDocumentsDto) returns (IFindDocumentsResponse) {}

    rpc FindOneById(common.IOnlyId) returns (IFindDocumentByIdResponse) {}  

    rpc FindAccessToken (common.IOnlyId) returns (IFindAccessTokenResponse) {}
}

message ICreateDocumentDto {
    string authorId = 1;

    string title = 2;

    string typeId = 3;

    string aimId = 4; 

    bool isUrgent = 5;

    string fileExtension = 6;

    string hash = 7;
}

message ICreateDocumentResponseData {
    string id = 1;

    string title = 2;

    string authorId = 3;

    string typeId = 4;

    string aimId = 5; 

    bool isUrgent = 6;
}

message ICreateDocumentResponse {
    oneof response {
        ICreateDocumentResponseData data = 1;

        common.IHttpError error = 2;
    }
}

message IUpdateDocumentDto {
    string id = 1;

    optional string title = 2;

    optional string typeId = 3;

    optional string aimId = 4; 

    optional bool isUrgent = 5;
}

message IFindDocumentsDto {
    optional string authorId = 1;
    
    optional string typeId = 2;

    optional string aimId = 3;

    optional bool isUrgent = 4;

    optional string sortOrder = 5;
}

message IDocumentShortData {
    string id = 1;

    string title = 2;

    string createdAt = 3;
}

message IFindDocumentResponseData {
    repeated IDocumentShortData documents = 1;
}

message IFindDocumentsResponse {
    oneof response {
        IFindDocumentResponseData data = 1;

        common.IHttpError error = 2;
    }
}

message IFindOneDocumentResponse {
    string id = 1;

    string title = 2;

    string typeId = 3;

    string aimId = 4;

    bool isUrgent = 5;

    string authorId = 6;
}

message IFindDocumentByIdResponse {
    oneof response {
        IFindOneDocumentResponse data = 1;

        common.IHttpError error = 2;
    }
}

message IFullDocumentResponseData {
    string id = 1;

    string title = 2;

    string typeId = 3;

    string aimId = 4;

    bool isUrgent = 5;

    string authorId = 6;

    string accessToken = 7;
}

message IFullDocumentResponse {
    oneof response {
        IFullDocumentResponseData data = 1;

        common.IHttpError error = 2;
    }
}

message IFindAccessTokenResponse {
    oneof response {
        string data = 1;

        common.IHttpError error = 2;
    }
}

/********************************************Favourite Documents*********************************************************************/

service FavouriteDocumentsService {
    rpc Add (IAddToFavouriteDto) returns (common.IEmptyResponse) {}

    rpc Remove (IRemoveFromFavouriteDto) returns (common.IEmptyResponse) {}

    rpc FindAll (common.IOnlyId) returns (IFindDocumentsResponse) {}
}

message IAddToFavouriteDto {
    string userId = 1;

    string documentId = 2;
}


message IRemoveFromFavouriteDto {
    string documentId = 1;

    string userId = 2;
}

/********************************************Document Versions*********************************************************************/

service DocumentVersionsService {
    rpc Create (ICreateDocumentVersionDto) returns (ICreateDocumentVersionResponse) {}

    rpc FindAll (common.IOnlyId) returns (IFindAllDocumentVersionsResponse) {}

    rpc FindOneById (common.IOnlyId) returns (IFindOneDocumentVersionResponse) {}

    rpc FindLast (common.IOnlyId) returns (IFindOneDocumentVersionResponse) {}

    rpc FindDocument (common.IOnlyId) returns (IFullDocumentResponse) {}

    rpc Update (IUpdateDocumentVersionDto) returns (common.IEmptyResponse) {}
}

message ICreateDocumentVersionDto {
    string documentId = 1;

    string fileExtension = 2;

    optional string description = 3;

    string hash = 4;
}

message ICreateDocumentVersionResponseData {
    string url = 1;
}

message ICreateDocumentVersionResponse {
    oneof response {
        ICreateDocumentVersionResponseData data = 1;
        
        common.IHttpError error = 2;
    }
}

message IVersion {
    string id = 1;

    optional string description = 2;

    string url = 3;

    string createdAt = 4;
}

message IFindAllVersionsResponseData {
    repeated IVersion versions = 1;
}

message IFindAllDocumentVersionsResponse {
    oneof response {
        IFindAllVersionsResponseData data = 1;

        common.IHttpError error = 2;
    }
}

message IFindOneDocumentVersionResponse {
    oneof response {
        IVersion data = 1;

        common.IHttpError error = 2;
    }
}

message IUpdateDocumentVersionDto {
    string id = 1;

    optional string description = 2;
}

/********************************************Document Hashing*********************************************************************/

service DocumentHashingService {
    rpc Update (IUpdateDocumentHashDto) returns (common.IEmptyResponse) {}

    rpc Verify (IVerifyDocumentHashDto) returns (ICheckDocumentHashResponse) {}
}

message IUpdateDocumentHashDto {
    string versionId = 1;

    string hash = 2;

    string sign = 3;
}

message IVerifyDocumentHashDto {
    string hash = 1;

    string sign = 2;
}

message IVerifyDocumentHashResponseData {
    bool valid = 1;
}

message ICheckDocumentHashResponse {
    oneof response {
        IVerifyDocumentHashResponseData data = 1;

        common.IHttpError error = 2;
    }
}

/********************************************Document Comments*********************************************************************/

service DocumentCommentsService {
    rpc Create (ICreateDocumentCommentDto) returns (ICreateDocumentCommentResponse) {}

    rpc FindOneById (common.IOnlyId) returns (IFindOneDocumentCommentResponse) {}
    
    rpc FindAll (common.IOnlyId) returns (IFindAllCommentsResponse) {}

    rpc Update (IUpdateDocumentCommentDto) returns (common.IEmptyResponse) {}

    rpc Delete (common.IOnlyId) returns (common.IEmptyResponse) {}
}

message ICreateDocumentCommentDto {
    string message = 1;

    string creatorId = 2;

    string versionId = 3;
}

message ICreateDocumentCommentResponseData {
    string id = 1;

    string message = 2;

    string creatorId = 3;

    string createdAt = 4;
}

message ICreateDocumentCommentResponse {
    oneof response {
        ICreateDocumentCommentResponseData data = 1;

        common.IHttpError error = 2;
    }
}

message ICommentShortData {
    string id = 1;

    string message = 2;

    string creatorId = 3;

    string createdAt= 4;
}

message IFindOneDocumentCommentResponse {
    oneof response {
        ICommentShortData data = 1;

        common.IHttpError error = 2;
    }
}

message IFindAllCommentsResponseData {
    repeated ICommentShortData comments = 1;
}

message IFindAllCommentsResponse {
    oneof response {
        IFindAllCommentsResponseData data = 1;

        common.IHttpError error = 2;
    }
}

message IUpdateDocumentCommentDto {
    string id = 1;

    string message = 2;
}
