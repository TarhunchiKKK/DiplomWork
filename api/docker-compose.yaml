version: "3.7"

services:
  # api-gateway:
  #   container_name: api-gateway
  #   build: 
  #     context: ./docker
  #     dockerfile: api-gateway 
  #   ports:
  #     - ${API_GATEWAY_PORT}:3000
  #   networks:
  #     - api
  #     - api-gateway-network
  #   depends_on:
  #     - common
  
  # authentication-microservice:
  #   container_name: authentication-microservice
  #   build: 
  #     context: ./docker
  #     dockerfile: authentication-microservice
  #   ports:
  #     - ${AUTHENTICATION_MICROSERVICE_PORT}:3000
  #   networks:
  #     - api
  #     - authentication-microservice-network
  #   depends_on:
  #     - common

  # users-management-microservice:
  #   container_name: users-management-microservice
  #   build: 
  #     context: ./docker
  #     dockerfile: users-management-microservice
  #   ports:
  #     - ${USERS_MANAGEMENT_MICROSERVICE_PORT}:3000
  #   networks:
  #     - api
  #     - users-management-microservice-network
  #   depends_on:
  #     - common

  users-management-microservice-db:
    container_name: users-management-microservice-db
    image: postgres:15.2
    restart: always
    environment:
        - POSTGRES_DB=${USERS_MANAGEMENT_MICROSERVICE_DB_NAME}
        - POSTGRES_USER=${USERS_MANAGEMENT_MICROSERVICE_DB_USER}
        - POSTGRES_PASSWORD=${USERS_MANAGEMENT_MICROSERVICE_DB_PASSWORD}
    ports:
        - ${USERS_MANAGEMENT_MICROSERVICE_DB_PORT}:5432
    volumes:
        - users-management-microservice-postgres_data:/var/lib/postgresql/data
    networks:
        - users-management-microservice-network

volumes:
  users-management-microservice-postgres_data:

networks:
  api:
  api-gateway-network:
  authentication-microservice-network:
  users-management-microservice-network: