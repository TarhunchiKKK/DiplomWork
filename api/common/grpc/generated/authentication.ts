// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v3.14.0
// source: authentication.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export interface Profile {
    id: string;
    username: string;
    email: string;
    role: string;
    isTwoFactorEnabled: boolean;
    isDeactivated: boolean;
    post: string;
}

export interface RegisterAdminDto {
    username: string;
    email: string;
    password: string;
}

export interface AuthResponse {
    profile: Profile | undefined;
    token: string;
}

export const AUTHENTICATION_PACKAGE_NAME = "authentication";

export interface AuthenticationServiceClient {
    registerAdmin(request: RegisterAdminDto): Observable<AuthResponse>;
}

export interface AuthenticationServiceController {
    registerAdmin(request: RegisterAdminDto): Promise<AuthResponse> | Observable<AuthResponse> | AuthResponse;
}

export function AuthenticationServiceControllerMethods() {
    return function (constructor: Function) {
        const grpcMethods: string[] = ["registerAdmin"];
        for (const method of grpcMethods) {
            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
            GrpcMethod("AuthenticationService", method)(constructor.prototype[method], method, descriptor);
        }
        const grpcStreamMethods: string[] = [];
        for (const method of grpcStreamMethods) {
            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
            GrpcStreamMethod("AuthenticationService", method)(constructor.prototype[method], method, descriptor);
        }
    };
}

export const AUTHENTICATION_SERVICE_NAME = "AuthenticationService";
