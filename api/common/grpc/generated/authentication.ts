// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v3.21.12
// source: authentication.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

const protobufPackage = "authentication";

export interface IRegisterAdminDto {
  username: string;
  email: string;
  password: string;
}

export interface IAuthResponse {
  id: string;
  username: string;
  email: string;
  role: string;
  organizationId: string;
  token: string;
}

export const AUTHENTICATION_PACKAGE_NAME = "authentication";

export interface AuthenticationServiceClient {
  registerAdmin(request: IRegisterAdminDto): Observable<IAuthResponse>;
}

export interface AuthenticationServiceController {
  registerAdmin(request: IRegisterAdminDto): Promise<IAuthResponse> | Observable<IAuthResponse> | IAuthResponse;
}

export function AuthenticationServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["registerAdmin"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("AuthenticationService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("AuthenticationService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const AUTHENTICATION_SERVICE_NAME = "AuthenticationService";
