// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v3.14.0
// source: users-management.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export interface CreateUserDto {
    username: string;
    email: string;
    password: string;
    role: string;
    organizationId: string;
}

export interface CreateUserResponse {
    id: string;
    username: string;
    email: string;
    password: string;
    role: string;
    organizationId: string;
    createdAt: string;
}

export const USERS_MANAGEMENT_PACKAGE_NAME = "usersManagement";

export interface UsersManagementServiceClient {
    create(request: CreateUserDto): Observable<CreateUserResponse>;
}

export interface UsersManagementServiceController {
    create(request: CreateUserDto): Promise<CreateUserResponse> | Observable<CreateUserResponse> | CreateUserResponse;
}

export function UsersManagementServiceControllerMethods() {
    return function (constructor: Function) {
        const grpcMethods: string[] = ["create"];
        for (const method of grpcMethods) {
            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
            GrpcMethod("UsersManagementService", method)(constructor.prototype[method], method, descriptor);
        }
        const grpcStreamMethods: string[] = [];
        for (const method of grpcStreamMethods) {
            const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
            GrpcStreamMethod("UsersManagementService", method)(constructor.prototype[method], method, descriptor);
        }
    };
}

export const USERS_MANAGEMENT_SERVICE_NAME = "UsersManagementService";
